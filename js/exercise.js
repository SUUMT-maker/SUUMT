// üèÉ‚Äç‚ôÇÔ∏è Ïö¥Îèô Í¥ÄÎ†® Ìï®ÏàòÎì§

// üîß Ï†ÑÏó≠ Î≥ÄÏàòÎì§
let reviewCarouselInterval = null;

function startExercise() {
    resetExercise();
    showScreen('exerciseScreen');
    
    // Ïö¥Îèô Ï§ëÏóêÎäî ÌïòÎã® ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î∞î Ïà®ÍπÄ
    if (typeof window.hideBottomNav === 'function') {
        window.hideBottomNav();
    }
    
    gtag('event', 'exercise_start', {
        inhale_resistance: resistanceSettings.inhale,
        exhale_resistance: resistanceSettings.exhale
    });
    
    startCountdown();
}

function startCountdown() {
    let count = 3;
    const countdownEl = document.getElementById('countdown');
    
    const countdownInterval = setInterval(() => {
        countdownEl.textContent = count;
        count--;
        
        if (count < 0) {
            clearInterval(countdownInterval);
            startBreathing();
        }
    }, 1000);
}

function startBreathing() {
    document.getElementById('countdownSection').style.display = 'none';
    document.getElementById('breathingSection').style.display = 'block';
    
    const circle = document.getElementById('breathingCircle');
    circle.className = 'breathing-circle exhale';
    
    initializeProgressIndicators();
    
    exerciseStartTime = getCurrentUserTime(); // ÏÇ¨Ïö©Ïûê ÏãúÍ∞ÑÎåÄ Ï†ÅÏö©
    
    setTimeout(() => {
        breathingCycle();
    }, 500);
}

function breathingCycle() {
    if (isPaused || isAborted) return;

    const circle = document.getElementById('breathingCircle');
    const circleText = document.getElementById('circleText');

    updateProgressIndicators();

    if (breathingPhase === 'inhale') {
        circleText.textContent = 'ÍπäÍ≤å Îì§Ïù¥ÎßàÏÖîÏöî';
        circle.className = 'breathing-circle inhale';
        
        breathingTimer = setTimeout(() => {
            breathingPhase = 'hold';
            breathingCycle();
        }, 3000);

    } else if (breathingPhase === 'hold') {
        circleText.textContent = 'Ïû†Ïãú Î©àÏ∂îÏÑ∏Ïöî';
        circle.className = 'breathing-circle hold';
        
        breathingTimer = setTimeout(() => {
            breathingPhase = 'exhale';
            breathingCycle();
        }, 1000);

    } else if (breathingPhase === 'exhale') {
        circleText.textContent = 'ÎÅùÍπåÏßÄ ÎÇ¥Ïâ¨Ïñ¥Ïöî';
        circle.className = 'breathing-circle exhale';
        
        breathingTimer = setTimeout(() => {
            breathingPhase = 'exhale-hold';
            breathingCycle();
        }, 3000);

    } else if (breathingPhase === 'exhale-hold') {
        circleText.textContent = 'Ïû†Ïãú Î©àÏ∂îÏÑ∏Ïöî';
        circle.className = 'breathing-circle exhale-hold';
        
        breathingTimer = setTimeout(() => {
            currentBreath++;
            breathingPhase = 'inhale';
            
            if (currentBreath > 10) {
                currentSet++;
                currentBreath = 1;
                
                if (currentSet > 2) {
                    completeExercise();
                } else {
                    startRest();
                }
            } else {
                breathingCycle();
            }
        }, 1000);
    }
}

function startRest() {
    document.getElementById('breathingSection').style.display = 'none';
    
    // üîß Í∏∞Ï°¥ ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    stopGlobalRestTimer();
    clearInterval(restTimer);
    
    // ‚è∞ Ìú¥Ïãù ÏãúÍ∞Ñ Ï¥àÍ∏∞Ìôî Î∞è ÌÉÄÏù¥Î®∏ Ï¶âÏãú ÏãúÏûë
    globalRestTime = 120; // 2Î∂Ñ
    console.log('‚è∞ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Ï¶âÏãú ÏãúÏûë:', globalRestTime, 'Ï¥à');
    startGlobalRestTimer();
    
    // üéÆ ÌÄ¥Ï¶à ÏãúÏä§ÌÖúÏù¥ ÌôúÏÑ±ÌôîÎêòÏñ¥ ÏûàÏúºÎ©¥ ÌÄ¥Ï¶à Ï†úÏïàÎ∂ÄÌÑ∞ ÏãúÏûë
    if (QUIZ_CONFIG.QUIZ_ENABLED) {
        showRestIntro();
    } else {
        showNormalRest();
    }
}

function skipRest() {
    console.log('üîß skipRest Ìï®Ïàò ÏãúÏûë');
    
    stopGlobalRestTimer(); // üîß Ï†ÑÏó≠ ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    clearTimeout(quizOfferTimer); // ÌÄ¥Ï¶à Ï†úÏïà ÌÉÄÏù¥Î®∏ÎèÑ Ï†ïÎ¶¨
    
    incrementSkippedRestCount(); // üéÆ Î∞∞ÏßÄ Ï°∞Í±¥Ïö© Ïπ¥Ïö¥Ìä∏
    
    console.log('‚è∞ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Í±¥ÎÑàÎõ∞Í∏∞ ÏôÑÎ£å');
    
    startNextSet();
}

function startNextSet() {
    console.log('üîß startNextSet Ìï®Ïàò ÏãúÏûë');
    
    // üîß Î™®Îì† Ìú¥Ïãù/ÌÄ¥Ï¶à Í¥ÄÎ†® ÌôîÎ©¥ Ïà®Í∏∞Í∏∞ (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    document.getElementById('restSection').style.display = 'none';
    document.getElementById('quizOfferSection').style.display = 'none';
    document.getElementById('quizProgressSection').style.display = 'none';
    document.getElementById('quizRewardSection').style.display = 'none';
    
    // üîß Î™®Îì† ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    stopGlobalRestTimer();
    clearTimeout(quizOfferTimer);
    clearInterval(restTimer);
    
    console.log('‚è∞ Î™®Îì† ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨ ÏôÑÎ£å');
    
    // üöÄ Ìò∏Ìù° ÌôîÎ©¥ ÌëúÏãú
    document.getElementById('breathingSection').style.display = 'block';
    
    const circle = document.getElementById('breathingCircle');
    circle.className = 'breathing-circle exhale';
    
    initializeProgressIndicators();
    
    setTimeout(() => {
        breathingCycle();
    }, 500);
}

function pauseExercise() {
    isPaused = !isPaused;
    const button = event.target;
    
    if (isPaused) {
        clearTimeout(breathingTimer);
        button.textContent = 'Í≥ÑÏÜçÌïòÍ∏∞';
        document.getElementById('circleText').textContent = 'ÏùºÏãúÏ†ïÏßÄ';
    } else {
        button.textContent = 'ÏùºÏãúÏ†ïÏßÄ';
        breathingCycle();
    }
}

async function completeExercise() {
    clearTimeout(breathingTimer);
    clearInterval(restTimer);
    
    // üîç [DEBUG] completeExercise() Ìò∏Ï∂úÎê®
    console.log('üîç [DEBUG] completeExercise() Ìò∏Ï∂úÎê®');
    console.log('üîç [DEBUG] isAborted:', isAborted);
    console.log('üîç [DEBUG] currentSet:', currentSet);
    console.log('üîç [DEBUG] currentBreath:', currentBreath);
    console.log('üîç [DEBUG] userFeedback:', userFeedback);
    
    const exerciseTime = Math.floor((getCurrentUserTime() - exerciseStartTime) / 1000);
    const minutes = Math.floor(exerciseTime / 60);
    const seconds = exerciseTime % 60;
    
    // üîß ÏôÑÎ£å ÏÑ∏Ìä∏ Í≥ÑÏÇ∞ ÏàòÏ†ï: 10Ìöå Ìò∏Ìù°ÏùÑ ÏôÑÎ£åÌïú ÏÑ∏Ìä∏Îßå Ïπ¥Ïö¥Ìä∏
    let actualCompletedSets = 0;
    if (!isAborted) {
        actualCompletedSets = 2; // ÏôÑÏ†ÑÌûà ÎÅùÍπåÏßÄ Ìïú Í≤ΩÏö∞
    } else {
        // Ï§ëÎã®Ìïú Í≤ΩÏö∞: ÏôÑÎ£åÎêú ÏÑ∏Ìä∏ Ïàò Ï†ïÌôïÌûà Í≥ÑÏÇ∞
        if (currentSet === 1) {
            // Ï≤´ ÏÑ∏Ìä∏ ÎèÑÏ§ëÏóê Ï§ëÎã®: 0ÏÑ∏Ìä∏ ÏôÑÎ£å
            actualCompletedSets = 0;
        } else if (currentSet === 2) {
            // Ï≤´ ÏÑ∏Ìä∏ ÏôÑÎ£å ÌõÑ Ï§ëÎã® (Ìú¥ÏãùÏãúÍ∞Ñ ÎòêÎäî 2ÏÑ∏Ìä∏ Ï§ë): 1ÏÑ∏Ìä∏ ÏôÑÎ£å
            actualCompletedSets = 1;
        } else {
            // currentSet > 2Ïù∏ Í≤ΩÏö∞Îäî ÏóÜÏßÄÎßå ÏïàÏ†ÑÏû•Ïπò
            actualCompletedSets = 2;
        }
    }
    
    // üîß ÏôÑÎ£å Ìò∏Ìù° ÌöüÏàò Í≥ÑÏÇ∞ Í∞úÏÑ†
    let actualCompletedBreaths = 0;
    if (!isAborted) {
        actualCompletedBreaths = 20;
    } else {
        if (currentSet === 1) {
            // Ï≤´ ÏÑ∏Ìä∏ ÎèÑÏ§ë: ÌòÑÏû¨ Ìò∏Ìù° - 1
            actualCompletedBreaths = Math.max(0, currentBreath - 1);
        } else if (currentSet === 2) {
            // Îëê Î≤àÏß∏ ÏÑ∏Ìä∏: Ï≤´ ÏÑ∏Ìä∏ 10Ìöå + ÌòÑÏû¨ Ìò∏Ìù° - 1
            actualCompletedBreaths = 10 + Math.max(0, currentBreath - 1);
        }
    }
    
    // üîç [DEBUG] Í≥ÑÏÇ∞ Í≤∞Í≥º
    console.log('üîç [DEBUG] Í≥ÑÏÇ∞ Í≤∞Í≥º:');
    console.log('üîç [DEBUG] actualCompletedSets:', actualCompletedSets);
    console.log('üîç [DEBUG] actualCompletedBreaths:', actualCompletedBreaths);
    
    window.exerciseData = {
        exerciseTime: `${minutes}:${seconds.toString().padStart(2, '0')}`,
        completedSets: actualCompletedSets,
        completedBreaths: actualCompletedBreaths,
        isAborted: isAborted,
        resistanceSettings: { ...resistanceSettings },
        userFeedback: userFeedback
    };

    // üîç [DEBUG] window.exerciseData ÏÑ§Ï†ï ÏôÑÎ£å
    console.log('üîç [DEBUG] window.exerciseData ÏÑ§Ï†ï ÏôÑÎ£å:');
    console.log('üîç [DEBUG] window.exerciseData:', window.exerciseData);

    setTimeout(() => {
        showFeedbackScreen();
    }, 1000);
}

function showStopModal() {
    document.getElementById('confirmModal').classList.add('show');
}

function hideModal() {
    document.getElementById('confirmModal').classList.remove('show');
}

function confirmStop() {
    hideModal();
    isAborted = true;
    clearTimeout(breathingTimer);
    
    // üîß Î™®Îì† ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    stopGlobalRestTimer();
    clearInterval(restTimer);
    
    gtag('event', 'exercise_aborted', {
        completed_sets: Math.max(0, currentSet - 1),
        completed_breaths: Math.max(0, (currentSet - 1) * 10 + (currentBreath - 1))
    });
    
    completeExercise();
}

function initializeProgressIndicators() {
    const breathsContainer = document.getElementById('breathsIndicators');
    breathsContainer.innerHTML = '';
    
    for (let i = 0; i < 10; i++) {
        const breathDot = document.createElement('div');
        breathDot.className = 'breath-indicator';
        breathDot.setAttribute('data-breath', i + 1);
        breathsContainer.appendChild(breathDot);
    }
    
    updateProgressIndicators();
}

function updateProgressIndicators() {
    const setIndicators = document.querySelectorAll('.set-indicator');
    setIndicators.forEach((indicator, index) => {
        indicator.classList.remove('active', 'current');
        if (index < currentSet - 1) {
            indicator.classList.add('active');
        } else if (index === currentSet - 1) {
            indicator.classList.add('current');
        }
    });
    
    const breathIndicators = document.querySelectorAll('.breath-indicator');
    breathIndicators.forEach((indicator, index) => {
        indicator.classList.remove('completed', 'current');
        if (index < currentBreath - 1) {
            indicator.classList.add('completed');
        } else if (index === currentBreath - 1) {
            indicator.classList.add('current');
        }
    });
    
    document.getElementById('setNumbers').textContent = `${currentSet} / 2 ÏÑ∏Ìä∏`;
    document.getElementById('breathNumbers').textContent = `${currentBreath} / 10 Ìöå`;
}

function resetExercise() {
    console.log('üîß resetExercise Ìï®Ïàò ÏãúÏûë');
    
    currentSet = 1;
    currentBreath = 1;
    isPaused = false;
    isAborted = false;
    breathingPhase = 'inhale';
    userFeedback = null;
    clearTimeout(breathingTimer);
    clearInterval(restTimer);
    
    // üéÆ ÌÄ¥Ï¶à ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî
    currentQuizQuestion = 0;
    quizCorrectAnswers = 0;
    quizStartTime = null;
    selectedQuestions = [];
    clearTimeout(quizOfferTimer);
    
    // üîß Ï†ÑÏó≠ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    stopGlobalRestTimer();
    
    // üî• ÏÉàÎ°úÏö¥ Í∏∞Îä•: Î¶¨Î∑∞ Ï∫êÎü¨ÏÖÄ Ï†ïÎ¶¨
    if (reviewCarouselInterval) {
        clearInterval(reviewCarouselInterval);
    }
    
    // Î™®Îì† ÌôîÎ©¥ Ïà®Í∏∞Í∏∞ (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    document.getElementById('countdownSection').style.display = 'block';
    document.getElementById('breathingSection').style.display = 'none';
    document.getElementById('restSection').style.display = 'none';
    document.getElementById('quizOfferSection').style.display = 'none';
    document.getElementById('quizProgressSection').style.display = 'none';
    document.getElementById('quizRewardSection').style.display = 'none';
    
    console.log('üîß Ïö¥Îèô ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
}

// üîß Ï†ÑÏó≠ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Í¥ÄÎ†® Ìï®ÏàòÎì§
function stopGlobalRestTimer() {
    if (globalRestTimer) {
        clearInterval(globalRestTimer);
        globalRestTimer = null;
    }
}

function startGlobalRestTimer() {
    console.log('üîß startGlobalRestTimer Ìï®Ïàò ÏãúÏûë');
    stopGlobalRestTimer(); // Í∏∞Ï°¥ ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    
    // Ï¥àÍ∏∞ Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ Í∞í ÏÑ§Ï†ï (2:00 ÌòïÏãùÏúºÎ°ú ÌëúÏãú)
    updateAllCountdowns();
    
    console.log('‚è∞ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ ÏãúÏûë - ÎÇ®ÏùÄ ÏãúÍ∞Ñ:', globalRestTime, 'Ï¥à');
    
    globalRestTimer = setInterval(() => {
        globalRestTime--;
        updateAllCountdowns();
        
        console.log('‚è∞ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Ìã±:', globalRestTime, 'Ï¥à');
        
        if (globalRestTime <= 0) {
            console.log('‚è∞ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ ÏôÑÎ£å - Îã§Ïùå ÏÑ∏Ìä∏ ÏãúÏûë');
            stopGlobalRestTimer();
            startNextSet();
        }
    }, 1000);
}

// üïê ÏãúÍ∞Ñ Ìè¨Îß∑ÌåÖ Ìï®Ïàò
function formatTime(seconds) {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
}

function updateAllCountdowns() {
    console.log('‚è∞ Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏:', globalRestTime, '‚Üí', formatTime(globalRestTime));
    
    // Î©îÏù∏ ÌôîÎ©¥Ïùò Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const mainCountdown = document.getElementById('mainRestCountdown');
    if (mainCountdown) {
        mainCountdown.textContent = formatTime(globalRestTime);
    }
    
    // Ïö¥Îèô ÌôîÎ©¥Ïùò Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const exerciseCountdown = document.getElementById('exerciseRestCountdown');
    if (exerciseCountdown) {
        exerciseCountdown.textContent = formatTime(globalRestTime);
    }
    
    // Ìú¥Ïãù ÌôîÎ©¥Ïùò Î©îÏù∏ Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const restCountdown = document.getElementById('restCountdown');
    if (restCountdown) {
        restCountdown.textContent = formatTime(globalRestTime);
    }
    
    // ÌÄ¥Ï¶à Ï†úÏïà ÌôîÎ©¥Ïùò Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const quizOfferCountdown = document.getElementById('quizOfferCountdown');
    if (quizOfferCountdown) {
        quizOfferCountdown.textContent = formatTime(globalRestTime);
    }
    
    // ÌÄ¥Ï¶à ÏßÑÌñâ ÌôîÎ©¥Ïùò Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const quizCountdown = document.getElementById('quizCountdown');
    if (quizCountdown) {
        quizCountdown.textContent = formatTime(globalRestTime);
    }
    
    // ÌÄ¥Ï¶à Î≥¥ÏÉÅ ÌôîÎ©¥Ïùò Ïπ¥Ïö¥Ìä∏Îã§Ïö¥ ÏóÖÎç∞Ïù¥Ìä∏
    const quizRewardCountdown = document.getElementById('quizRewardCountdown');
    if (quizRewardCountdown) {
        quizRewardCountdown.textContent = formatTime(globalRestTime);
    }
}

function showRestIntro() {
    console.log('üîç showRestIntro Ìï®Ïàò ÏãúÏûë');
    
    // Ìò∏Ìù° ÌôîÎ©¥ Ïà®Í∏∞Í∏∞
    document.getElementById('breathingSection').style.display = 'none';
    
    // Ìú¥Ïãù ÌôîÎ©¥ ÌëúÏãú
    document.getElementById('restSection').style.display = 'block';
    
    // Ìú¥Ïãù Ï†úÏñ¥ Î≤ÑÌäº Ïà®Í∏∞Í∏∞ (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    const restControlButtons = document.getElementById('restControlButtons');
    if (restControlButtons) {
        restControlButtons.style.display = 'none';
    }
    
    // Ìú¥Ïãù ÏßÑÌñâÎèÑ ÌÖçÏä§Ìä∏ ÏÑ§Ï†ï (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    const restProgressEl = document.getElementById('restProgressText');
    if (restProgressEl) {
        restProgressEl.textContent = `${currentSet - 1}ÏÑ∏Ìä∏ ÏôÑÎ£å`;
    }
    
    // GA Ïù¥Î≤§Ìä∏: Ìú¥Ïãù ÏãúÏûë (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    gtag('event', 'rest_started', {
        set_number: currentSet - 1,
        quiz_enabled: QUIZ_CONFIG.QUIZ_ENABLED
    });
    
    console.log('‚è∞ 5Ï¥à ÌõÑ ÌÄ¥Ï¶à/Ìú¥Ïãù ÏÑ†ÌÉù Ïπ¥Îìú ÌëúÏãú ÏòàÏ†ï');
    
    // 5Ï¥à ÌõÑ ÌÄ¥Ï¶à Ï†úÏïà ÌôîÎ©¥ÏúºÎ°ú Ï†ÑÌôò (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    quizOfferTimer = setTimeout(() => {
        if (!isAborted) {
            console.log('‚è∞ 5Ï¥à Í≤ΩÍ≥º - ÌÄ¥Ï¶à/Ìú¥Ïãù ÏÑ†ÌÉù Ïπ¥Îìú ÌëúÏãú ÏãúÏûë');
            showQuizOffer();
        }
    }, QUIZ_CONFIG.OFFER_DELAY);
}

function showNormalRest() {
    console.log('üîç showNormalRest Ìï®Ïàò ÏãúÏûë');
    
    // Ìò∏Ìù° ÌôîÎ©¥ Ïà®Í∏∞Í∏∞
    document.getElementById('breathingSection').style.display = 'none';
    
    // Ìú¥Ïãù ÌôîÎ©¥ ÌëúÏãú
    document.getElementById('restSection').style.display = 'block';
    
    // Ìú¥Ïãù Ï†úÏñ¥ Î≤ÑÌäº ÌëúÏãú (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    const restControlButtons = document.getElementById('restControlButtons');
    if (restControlButtons) {
        restControlButtons.style.display = 'block';
    }
    
    // Ìú¥Ïãù ÏßÑÌñâÎèÑ ÌÖçÏä§Ìä∏ ÏÑ§Ï†ï (ÏõêÎ≥∏Í≥º ÎèôÏùº)
    const restProgressEl = document.getElementById('restProgressText');
    if (restProgressEl) {
        restProgressEl.textContent = `${currentSet - 1}ÏÑ∏Ìä∏ ÏôÑÎ£å`;
    }
    
    // Ï†ÑÏó≠ ÌÉÄÏù¥Î®∏Îäî Ïù¥ÎØ∏ startRestÏóêÏÑú ÏãúÏûëÎê®
    console.log('‚è∞ Ï†ÑÏó≠ Ìú¥Ïãù ÌÉÄÏù¥Î®∏ Í≥ÑÏÜç ÏÇ¨Ïö© - ÎÇ®ÏùÄ ÏãúÍ∞Ñ:', globalRestTime, 'Ï¥à');
}
